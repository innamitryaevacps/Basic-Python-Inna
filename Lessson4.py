#!/usr/bin/env python
# coding: utf-8

# <center>
# <img src="../img/python_theme.png">
# # MLClass. "Прикладной анализ данных"
# # Модуль "Инструментарий Data Science"
# <img src="../img/mlclass_logo.jpg" height="240" width="240">
# 
# ## Автор материала: Юрий Кашницкий, ФКН НИУ ВШЭ
# </center>
# Материал распространяется на условиях лицензии <a href="https://opensource.org/licenses/MS-RL">Ms-RL</a>. Можно использовать в любых целях, кроме коммерческих, но с обязательным упоминанием автора материала.

# # Задачи к уроку 4
# http://informatics.mccme.ru/mod/statements/view.php?id=16560#1

# In[ ]:


# Python 2 and 3 compatibility
# pip install future
from __future__ import (absolute_import, division,
                        print_function, unicode_literals)
from builtins import *


# ## Задача A
# Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).
# Программа должна быть эффективной и не выполнять лишних действий!

# In[ ]:


ls = [x for x in range(1,11)]
print(ls[::2])


# ## Задача B
# Дана строка, состоящая из слов, разделенных пробелами. Определите, сколько в ней слов. Используйте для решения задачи метод count.

# In[ ]:


s = input()
print(s.count(" ")+1)


# ## Задача C
# Дана строка, состоящая ровно из двух слов, разделенных пробелом. Переставьте эти слова местами. Результат запишите в строку и выведите получившуюся строку.
# 
# При решении этой задачи нельзя пользоваться циклами и инструкцией if.

# In[ ]:


s = input()
a, b = s.split(" ")
print(" ".join((b, a)))


# ## Задача D
# Дана строка, в которой буква h встречается минимум два раза. Удалите из этой строки первое и последнее вхождение буквы h, а также все символы, находящиеся между ними.

# In[ ]:


s = input()
print(s[:s.find('h')] + s[s.rfind('h'):][1:])


# ## Задача E
# Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т.д.). Если элементов нечетное число, то последний элемент остается на своем месте.

# In[ ]:


l = [int(x) for x in input().split(sep=' ')]
for i in range(0, len(l)-1, 2):
    l[i], l[i+1] = l[i+1], l[i]
print(l)


# ## Задача F
# Дана строка, в которой буква h встречается как минимум два раза. Разверните последовательность символов, заключенную между первым и последнием появлением буквы h, в противоположном порядке.

# In[ ]:


s = input()
print(s[:s.find("h")+1] + s[s.rfind("h")-1:s.find("h"):-1] + s[s.rfind("h"):])


# ## Задача G
# Дана строка. Получите новую строку, вставив между двумя символами исходной строки символ *. Выведите полученную строку.

# In[ ]:


s = input()
print("".join(sub_s + "*" for sub_s in s)[:-1])


# ## Задача H
# В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент этого списка

# In[ ]:


import numpy as np

l = [x for x in input().split(" ")]
maximum = np.argmax(l)
minimum = np.argmin(l)
l[maximum], l[minimum] = l[minimum], l[maximum]
print(l)


# ## Задача I
# Дан список чисел, который может содержать до 100000 чисел. Определите, сколько в нем встречается различных чисел.
# 
# Примечание. Эту задачу на Питоне можно решить в одну строчку.

# In[ ]:


l = l = [x for x in input().split(" ")]
print(len(set(l)))


# ## Задача J
# Даны два списка чисел, которые могут содержать до 100000 чисел каждый. Посчитайте, сколько чисел содержится одновременно как в первом списке, так и во втором.
# 
# Примечание. Эту задачу на Питоне можно решить в одну строчку.

# In[ ]:


l = [x for x in input().split(" ")]
m = [x for x in input().split(" ")]
common = set(l)&set(m)
print(len(common))


# ## Задача K
# Во входной строке записана последовательность чисел через пробел. Для каждого числа выведите слово YES (в отдельной строке), если это число ранее встречалось в последовательности или NO, если не встречалось.

# In[ ]:


l = [x for x in input().split(" ")]
s = set()
result = []
for num in l:
    if num in s:
        result.append("YES")
    else:
        result.append("NO")
        s.add(num)
print(*result)


# ## Задача L
# Во входном файле (вы можете читать данные из файла "../data/mathematics_wiki.txt") записан текст. Словом считается последовательность непробельных символов идущих подряд, слова разделены одним или большим числом пробелов или символами конца строки.
# 
# Определите, сколько различных слов содержится в этом тексте.

# In[ ]:


input_file = open("../mathematics_wiki.txt", 'r')

lines = input_file.readlines()
unique_words = set()
for line in lines:
    words = line.split(" ")
    if not unique_words:
        unique_words = set(words)
    else:
        unique_words = unique_words.union(set(words))

print(len(unique_words))


# ## Задача M
# Аня и Боря любят играть в разноцветные кубики, причем у каждого из них свой набор и в каждом наборе все кубики различны по цвету. Однажды дети заинтересовались, сколько существуют цветов таких, что кубики каждого цвета присутствуют в обоих наборах. Для этого они занумеровали все цвета случайными числами. На этом их энтузиазм иссяк, поэтому вам предлагается помочь им в оставшейся части.
# 
# Номер любого цвета — это целое число в пределах от 0 до $10^9$.

# In[ ]:


a = [x for x in input().split(" ")]
b = [x for x in input().split(" ")]

first, second = set(a), set(b)
print("Есть в обоих наборах:")
print(first&second, "Всего: " + str(len(first&second)))
print("Есть в первом наборе:")
print(first, "Всего: " + str(len(first)))
print("Есть во втором наборе:")
print(second, "Всего: " + str(len(second)))
print("Есть хотя бы в одном наборе:")
print(first.union(second), "Всего: " + str(len(first.union(second))))


# ## Задача N
# Каждый из N школьников некоторой школы знает $M_i$ языков. Определите, какие языки знают все школьники и языки, которые знает хотя бы один из школьников.
# 
# Входные данные
# 
# Первая строка входных данных содержит количество школьников N. Далее идет N чисел $M_i$, после каждого из чисел идет $M_i$ строк, содержащих названия языков, которые знает i-й школьник. Длина названий языков не превышает 1000 символов, количество различных языков не более 1000. $1 \leq N \leq 1000$, $1 \leq M_i \leq 500$.
# 
# Выходные данные
# 
# В первой строке выведите количество языков, которые знаю все школьники. Начиная со второй строки - список таких языков. Затем - количество языков, которые знает хотя бы один школьник, на следующих строках - список таких языков.

# In[ ]:


import copy

n = int(input())
everybody, somebody = set(), set()
for i in range(n):
    n_langs = int(input())
    langs = set()
    for j in range(n_langs):
        langs.add(input())
    somebody = somebody.union(langs)
    if i == 0:
        everybody = copy.deepcopy(langs)
    else:
        everybody = everybody.intersection(langs)

print(len(everybody))
print(everybody)
print(len(somebody))
print(somebody)


# ## Задача O
# Во входном файле (вы можете читать данные из файла "../data/mathematics_wiki.txt") записан текст. Словом считается последовательность непробельных символов идущих подряд, слова разделены одним или большим числом пробелов или символами конца строки.
# 
# Определите, сколько различных слов содержится в этом тексте.

# In[ ]:


# Условие повторяет задачу L
input_file = open("../mathematics_wiki.txt", 'r')

lines = input_file.readlines()
unique_words = set()
for line in lines:
    words = line.split(" ")
    if not unique_words:
        unique_words = set(words)
    else:
        unique_words = unique_words.union(set(words))

print(len(unique_words))

